{"version":3,"sources":["webpack:///./src/components/Header.tsx","webpack:///./src/components/Tags.tsx","webpack:///./src/components/Divider.tsx","webpack:///./src/templates/BlogDetail.tsx"],"names":["Header","image","className","to","Tags","tags","map","tag","index","key","Divider","BlogDetail","data","blog","remark","frontmatter","html","excerpt","fields","Layout","Seo","title","description","childImageSharp","fluid","src","undefined","published","article","Container","alt","profile","Card","date","readingTime","text","length","dangerouslySetInnerHTML","__html","blogs","nodes","List","Footer"],"mappings":"2FAAA,oHAMe,SAASA,EAAT,GAAyB,IAARC,EAAQ,EAARA,MAC5B,OACI,kBAAC,IAAD,CAAMC,UAAU,kDACZ,kBAAC,IAAD,CAAMC,GAAG,IACHD,UAAU,2DACZ,kBAAC,IAAD,CAASD,MAAOA,EAAOC,UAAU,mBACjC,yBAAKA,UAAU,yCAAf,oBAIJ,yBAAKA,UAAU,8CACX,kBAAC,IAAD,U,sKCfD,SAASE,EAAT,GAAsB,IAAPC,EAAO,EAAPA,KAC1B,OACI,yBAAKH,UAAU,0BACVG,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACN,yBAAKC,IAAKD,EACLN,UAAU,uFACVK,O,gBCNN,SAASG,IACpB,OACI,yBAAKR,UAAU,yBAAf,K,qCCSO,SAASS,EAAT,GAA4B,YAAPC,EAAO,EAAPA,KAAO,EACMA,EAAKC,KAAKC,OAAhDC,EADgC,EAChCA,YAAaC,EADmB,EACnBA,KAAMC,EADa,EACbA,QAASC,EADI,EACJA,OAEnC,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,MAAON,EAAYM,MACnBC,YAAaL,EACbhB,MAAK,oBAAEc,EAAYd,aAAd,iBAAE,EAAmBsB,uBAArB,iBAAE,EAAoCC,aAAtC,aAAE,EAA2CC,WAA7C,aAAoDC,EACzDrB,KAAMU,EAAYV,KAClBsB,UAAWZ,EAAYY,UACvBC,SAAO,IACZ,kBAACC,EAAA,EAAD,CAAW3B,UAAU,iCACjB,6BACI,kBAACF,EAAA,EAAD,CAAQC,MAAO,kBAAC,IAAD,CAAK6B,IAAI,kBACJT,MAAM,gBACNG,MAAOZ,EAAKmB,QAAQR,gBAAgBC,UACxD,kBAACQ,EAAA,EAAD,KACI,yBAAK9B,UAAU,wEACVa,EAAYkB,MAEjB,yBAAK/B,UAAU,sDACX,yBAAKA,UAAU,kCAAkCa,EAAYkB,MAC7D,kBAACvB,EAAD,MACA,yBAAKR,UAAU,kCAAkCgB,EAAOgB,YAAYC,MACnEpB,EAAYV,KAAK+B,OAAS,GAC3B,oCACI,kBAAC1B,EAAD,MACA,kBAACN,EAAD,CAAMC,KAAMU,EAAYV,SAGhC,wBAAIH,UAAU,oDACTa,EAAYM,OAEjB,6BAASnB,UAAU,WACVmC,wBAAyB,CAACC,OAAQtB,MAE9CJ,EAAK2B,MAAMC,MAAMJ,OAAS,GAAK,kBAACK,EAAA,EAAD,CAAMpB,MAAM,cAAcT,KAAMA,EAAK2B,SAEzE,kBAACG,EAAA,EAAD","file":"component---src-templates-blog-detail-tsx-6dc35d2c370b34fb0f4f.js","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport Profile from \"./Profile\";\nimport Link from \"gatsby-link\";\nimport Socials from \"./Socials\";\n\nexport default function Header({image}) {\n    return (\n        <Card className=\"flex items-center justify-between rounded-full\">\n            <Link to=\"/\"\n                  className=\"flex-center rounded-full clickable pr-3 overflow-hidden\">\n                <Profile image={image} className=\"w-12 h-12 mr-3\"/>\n                <div className=\"font-bold text-lg md:text-xl truncate\">\n                    Max Hoogenbosch\n                </div>\n            </Link>\n            <div className=\"hidden sm:flex justify-center items-center\">\n                <Socials/>\n            </div>\n        </Card>\n    )\n}","import React from \"react\";\n\nexport default function Tags({tags}) {\n    return (\n        <div className=\"space-x-2 py-1 md:py-0\">\n            {tags.map((tag, index) => (\n                <div key={index}\n                     className=\"px-2 py-1 bg-gray-200 dark:bg-gray-900 rounded-md inline-block text-sm leading-none\">\n                    {tag}\n                </div>\n            ))}\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function Divider() {\n    return (\n        <div className=\"inline font-bold px-2\">\n            &bull;\n        </div>\n    )\n}","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Container from \"../components/Container\";\nimport Card from \"../components/Card\";\nimport Layout from \"../components/Layout\";\nimport List from \"../components/Blog/List\";\nimport Header from \"../components/Header\";\nimport Tags from \"../components/Tags\";\nimport Footer from \"../components/Footer\";\nimport Divider from \"../components/Divider\";\nimport Img from \"gatsby-image\";\nimport Seo from \"../components/Seo\";\n\nexport default function BlogDetail({data}) {\n    const {frontmatter, html, excerpt, fields} = data.blog.remark;\n\n    return (\n        <Layout>\n            <Seo title={frontmatter.title}\n                 description={excerpt}\n                 image={frontmatter.image?.childImageSharp?.fluid?.src ?? undefined}\n                 tags={frontmatter.tags}\n                 published={frontmatter.published}\n                 article/>\n            <Container className=\"flex flex-col justify-between\">\n                <div>\n                    <Header image={<Img alt=\"Max Hoogenbosch\"\n                                        title=\"This is me :)\"\n                                        fluid={data.profile.childImageSharp.fluid}/>}/>\n                    <Card>\n                        <div className=\"text-sm whitespace-nowrap text-gray-500 dark:text-gray-300 md:hidden\">\n                            {frontmatter.date}\n                        </div>\n                        <div className=\"text-sm flex-wrap items-center hidden md:flex mb-4\">\n                            <div className=\"whitespace-nowrap py-1 md:py-0\">{frontmatter.date}</div>\n                            <Divider/>\n                            <div className=\"whitespace-nowrap py-1 md:py-0\">{fields.readingTime.text}</div>\n                            {frontmatter.tags.length > 0 &&\n                            <>\n                                <Divider/>\n                                <Tags tags={frontmatter.tags}/>\n                            </>}\n                        </div>\n                        <h1 className=\"font-bold text-xl md:text-3xl mb-4 leading-tight\">\n                            {frontmatter.title}\n                        </h1>\n                        <article className=\"markdown\"\n                                 dangerouslySetInnerHTML={{__html: html}}/>\n                    </Card>\n                    {data.blogs.nodes.length > 0 && <List title=\"Other blogs\" data={data.blogs}/>}\n                </div>\n                <Footer/>\n            </Container>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    query($slug: String!) {\n        blog: file(childMarkdownRemark: {frontmatter: {slug: {eq:  $slug }}}) {\n            remark: childMarkdownRemark {\n                html\n                excerpt(pruneLength: 200)\n                frontmatter {\n                    date(formatString: \"MMMM D, YYYY\")\n                    published: date(formatString: \"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")\n                    slug\n                    title\n                    tags\n                    image {\n                        childImageSharp {\n                            fluid(maxWidth: 900, toFormat: JPG) {\n                                src\n                            }\n                        }\n                    }\n                }\n                fields {\n                    readingTime {\n                        text\n                    }\n                }\n            }\n        }\n        blogs: allFile(\n            filter: {\n                childMarkdownRemark: {frontmatter: {\n                    publish: {eq: true}\n                    slug: {ne: $slug}\n                }}\n                sourceInstanceName: {eq: \"blog\"}\n                ext: {eq: \".md\"}\n            },\n            sort: {order: DESC, fields: childMarkdownRemark___frontmatter___date}\n            limit: 3\n        ) {\n            ...BlogList\n        }\n        profile: file(relativePath: { eq: \"profile.jpg\" }) {\n            ...SmallProfileImage\n        }\n    }\n`"],"sourceRoot":""}